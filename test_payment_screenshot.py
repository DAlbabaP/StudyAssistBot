#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π
"""

from app.database.connection import get_db_session
from app.services.payment_service import PaymentService
from app.services.order_service import OrderService

def test_payment_with_screenshot():
    """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∫ –ø–ª–∞—Ç–µ–∂—É"""
    
    db = get_db_session()
    try:
        payment_service = PaymentService(db)
        order_service = OrderService(db)
        
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–ª–∞—Ç–µ–∂–µ–π")
        print("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ø–ª–∞—Ç–µ–∂
        payments = payment_service.get_order_payments(16)  # –ó–∞–∫–∞–∑ #16 –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Ç–µ—Å—Ç–∞
        if not payments:
            print("‚ùå –ü–ª–∞—Ç–µ–∂–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        payment = payments[0]
        print(f"üí≥ –†–∞–±–æ—Ç–∞–µ–º —Å –ø–ª–∞—Ç–µ–∂–æ–º #{payment.id}")
        print(f"   –°—É–º–º–∞: {payment.amount_rub}")
        print(f"   –°—Ç–∞—Ç—É—Å: {payment.status_text}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ç–µ—Å—Ç–∞
        fake_file_id = 1  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å ID 1 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        user_message = "–í–æ—Ç –º–æ–π —á–µ–∫ –æ–± –æ–ø–ª–∞—Ç–µ"
        
        print(f"\nüîÑ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∫ –ø–ª–∞—Ç–µ–∂—É...")
        success = payment_service.process_payment_screenshot(
            order_id=16,
            file_id=fake_file_id,
            user_message=user_message
        )
        
        if success:
            print("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π...")
        updated_payments = payment_service.get_order_payments(16)
        for payment in updated_payments:
            print(f"   üí≥ –ü–ª–∞—Ç–µ–∂ #{payment.id}")
            print(f"      –°–∫—Ä–∏–Ω—à–æ—Ç: {'–ï—Å—Ç—å' if payment.screenshot_file_id else '–ù–µ—Ç'}")
            print(f"      –°–æ–æ–±—â–µ–Ω–∏–µ: {payment.screenshot_message or '–ù–µ—Ç'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
        print(f"\nüîç –ü–ª–∞—Ç–µ–∂–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ (—Å —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏):")
        pending_payments = payment_service.get_pending_payments(10)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ: {len(pending_payments)}")
        
        for payment in pending_payments:
            print(f"   ‚è≥ –ü–ª–∞—Ç–µ–∂ #{payment.id} (–∑–∞–∫–∞–∑ #{payment.order_id})")
            print(f"      –°—É–º–º–∞: {payment.amount_rub}")
            print(f"      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {payment.order.user.full_name}")
            if payment.screenshot_message:
                print(f"      –°–æ–æ–±—â–µ–Ω–∏–µ: {payment.screenshot_message}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
        if pending_payments:
            payment_to_verify = pending_payments[0]
            print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ #{payment_to_verify.id}...")
            
            success = payment_service.verify_payment(payment_to_verify.id, admin_user_id=1)
            if success:
                print("‚úÖ –ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
                updated_order = order_service.get_order_by_id(payment_to_verify.order_id)
                print(f"   –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {updated_order.status}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
    finally:
        db.close()

if __name__ == "__main__":
    test_payment_with_screenshot()
