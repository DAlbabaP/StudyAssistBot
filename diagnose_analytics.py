#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
"""
import requests
import json

BASE_URL = "http://127.0.0.1:8000"

def diagnose_analytics():
    """–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    
    session = requests.Session()
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´ –ê–ù–ê–õ–ò–¢–ò–ö–ò")
    print("=" * 60)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    login_data = {"password": "admin123"}
    response = session.post(f"{BASE_URL}/login", data=login_data, allow_redirects=False)
    
    if response.status_code != 302:
        print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö endpoints
    endpoints = {
        "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞": "/api/analytics/overview",
        "–î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤": "/api/analytics/orders/timeline",
        "–î–∏–Ω–∞–º–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤": "/api/analytics/revenue/timeline", 
        "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞": "/api/analytics/financial",
        "–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤": "/api/analytics/orders/status",
        "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π": "/api/analytics/users",
        "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏": "/api/analytics/operational",
        "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏": "/api/analytics/realtime",
        "–í–æ—Ä–æ–Ω–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–π": "/api/analytics/conversion/funnel",
        "–¢–∏–ø—ã —Ä–∞–±–æ—Ç": "/api/analytics/work-types"
    }
    
    all_working = True
    
    for name, endpoint in endpoints.items():
        print(f"\nüìä {name}")
        print(f"   Endpoint: {endpoint}")
        
        try:
            response = session.get(f"{BASE_URL}{endpoint}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    
                    # –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
                    if isinstance(data, dict):
                        print(f"   ‚úÖ –°–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–∞–º–∏: {list(data.keys())}")
                        
                        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö
                        has_meaningful_data = False
                        for key, value in data.items():
                            if isinstance(value, (int, float)) and value > 0:
                                has_meaningful_data = True
                                print(f"      üìà {key}: {value}")
                            elif isinstance(value, list) and len(value) > 0:
                                has_meaningful_data = True
                                print(f"      üìã {key}: —Å–ø–∏—Å–æ–∫ –∏–∑ {len(value)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                            elif isinstance(value, dict) and len(value) > 0:
                                has_meaningful_data = True
                                print(f"      üìä {key}: –æ–±—ä–µ–∫—Ç —Å {len(value)} –∫–ª—é—á–∞–º–∏")
                        
                        if not has_meaningful_data:
                            print("   ‚ö†Ô∏è  –î–∞–Ω–Ω—ã–µ –ø—É—Å—Ç—ã–µ –∏–ª–∏ –Ω—É–ª–µ–≤—ã–µ")
                            
                    elif isinstance(data, list):
                        print(f"   ‚úÖ –ú–∞—Å—Å–∏–≤ –∏–∑ {len(data)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                        if len(data) > 0:
                            print(f"      –ü—Ä–∏–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞: {list(data[0].keys()) if isinstance(data[0], dict) else type(data[0])}")
                        else:
                            print("   ‚ö†Ô∏è  –ú–∞—Å—Å–∏–≤ –ø—É—Å—Ç–æ–π")
                    else:
                        print(f"   ‚úÖ –î–∞–Ω–Ω—ã–µ —Ç–∏–ø–∞: {type(data)}")
                        
                except json.JSONDecodeError:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ JSON: {response.text[:100]}...")
                    all_working = False
                    
            else:
                print(f"   ‚ùå HTTP {response.status_code}: {response.text[:100]}...")
                all_working = False
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            all_working = False
    
    print("\n" + "=" * 60)
    if all_working:
        print("üéâ –í–°–ï ENDPOINTS –†–ê–ë–û–¢–ê–Æ–¢! –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏–ª–∏ JavaScript.")
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("1. –û—Ç–∫—Ä–æ–π—Ç–µ http://127.0.0.1:8000/analytics –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("2. –í–æ–π–¥–∏—Ç–µ —Å –ø–∞—Ä–æ–ª–µ–º: admin123")
        print("3. –û—Ç–∫—Ä–æ–π—Ç–µ DevTools (F12) –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Console –Ω–∞ –æ—à–∏–±–∫–∏")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Network tab –Ω–∞ failed –∑–∞–ø—Ä–æ—Å—ã")
    else:
        print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ endpoints")
    
    print("üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    diagnose_analytics()
