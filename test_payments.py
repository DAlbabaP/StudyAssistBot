#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞—Ç–µ–∂–µ–π
"""

from app.database.connection import get_db_session
from app.services.payment_service import PaymentService
from app.services.order_service import OrderService

def test_payments():
    """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π"""
    
    db = get_db_session()
    try:
        payment_service = PaymentService(db)
        order_service = OrderService(db)
        
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞—Ç–µ–∂–µ–π")
        print("=" * 50)
        
        # –ù–∞—Ö–æ–¥–∏–º –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        orders = order_service.get_orders_by_status(page=1, per_page=5)
        if not orders['orders']:
            print("‚ùå –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        
        order = orders['orders'][0]
        print(f"üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –∑–∞–∫–∞–∑–æ–º #{order.id}")
        print(f"   –¢–µ–º–∞: {order.topic}")
        print(f"   –¶–µ–Ω–∞: {order.price} —Ä—É–±" if order.price else "   –¶–µ–Ω–∞: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–µ–Ω—É –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if not order.price:
            order_service.update_order_price(order.id, 1500.0)
            print("üí∞ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è —Ü–µ–Ω–∞: 1500 —Ä—É–±")
        
        # –°–æ–∑–¥–∞—ë–º –ø–ª–∞—Ç–µ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...")
        try:
            message = payment_service.create_payment_request(order.id)
            print("‚úÖ –ü–ª–∞—Ç–µ–∂–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
            print(f"üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ: {message[:200]}...")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            import traceback
            traceback.print_exc()
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏ –ø–æ –∑–∞–∫–∞–∑—É
        print(f"\nüîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order.id}...")
        payments = payment_service.get_order_payments(order.id)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–ª–∞—Ç–µ–∂–µ–π: {len(payments)}")
        
        for payment in payments:
            print(f"   üí≥ –ü–ª–∞—Ç–µ–∂ #{payment.id}")
            print(f"      –°—É–º–º–∞: {payment.amount_rub}")
            print(f"      –°—Ç–∞—Ç—É—Å: {payment.status_text}")
            print(f"      –°–æ–∑–¥–∞–Ω: {payment.created_at}")
            if payment.screenshot_file_id:
                print(f"      –°–∫—Ä–∏–Ω—à–æ—Ç: —Ñ–∞–π–ª #{payment.screenshot_file_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏...")
        pending_payments = payment_service.get_pending_payments(10)
        print(f"‚úÖ –ü–ª–∞—Ç–µ–∂–µ–π –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ: {len(pending_payments)}")
        
        if pending_payments:
            for payment in pending_payments:
                print(f"   ‚è≥ –ü–ª–∞—Ç–µ–∂ #{payment.id} (–∑–∞–∫–∞–∑ #{payment.order_id})")
                print(f"      –°—É–º–º–∞: {payment.amount_rub}")
                print(f"      –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {payment.order.user.full_name}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
    finally:
        db.close()

if __name__ == "__main__":
    test_payments()
