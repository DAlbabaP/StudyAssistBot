#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç –∑–∞–∫–∞–∑–æ–≤
"""
from sqlalchemy.orm import Session
from sqlalchemy import func
from app.database.connection import get_db
from app.database.models.order import Order
from app.database.models.user import User
from datetime import datetime, timedelta

def check_database_data():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –î–ê–ù–ù–´–• –í –ë–ê–ó–ï")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db = next(get_db())
    
    try:
        # 1. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_orders = db.query(Order).count()
        total_users = db.query(User).count()
        
        print(f"üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: {total_orders}")
        print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}")
        
        if total_orders == 0:
            print("‚ùå –í –±–∞–∑–µ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤!")
            return
        
        # 2. –î–∞—Ç—ã –∑–∞–∫–∞–∑–æ–≤
        print(f"\nüìÖ –ê–Ω–∞–ª–∏–∑ –¥–∞—Ç –∑–∞–∫–∞–∑–æ–≤:")
        
        # –ü–µ—Ä–≤—ã–π –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑
        first_order = db.query(Order).order_by(Order.created_at.asc()).first()
        last_order = db.query(Order).order_by(Order.created_at.desc()).first()
        
        if first_order and last_order:
            print(f"   –ü–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑: {first_order.created_at} (ID: {first_order.id})")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–∫–∞–∑: {last_order.created_at} (ID: {last_order.id})")
            
            # –†–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏
            time_diff = last_order.created_at - first_order.created_at
            print(f"   –í—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω: {time_diff.days} –¥–Ω–µ–π")
        
        # 3. –ó–∞–∫–∞–∑—ã –ø–æ –¥–Ω—è–º
        print(f"\nüìà –ó–∞–∫–∞–∑—ã –ø–æ –¥–Ω—è–º (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–Ω–µ–π):")
        
        end_date = datetime.now().date()
        start_date = end_date - timedelta(days=10)
        
        orders_by_date = db.query(
            func.date(Order.created_at).label('date'),
            func.count(Order.id).label('count')
        ).filter(
            func.date(Order.created_at) >= start_date
        ).group_by(
            func.date(Order.created_at)
        ).order_by('date').all()
        
        if orders_by_date:
            for date, count in orders_by_date:
                print(f"   {date}: {count} –∑–∞–∫–∞–∑–æ–≤")
        else:
            print("   ‚ùå –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –¥–Ω–µ–π")
            
        # 4. –í—Å–µ –∑–∞–∫–∞–∑—ã —Å –¥–∞—Ç–∞–º–∏
        print(f"\nüìã –í—Å–µ –∑–∞–∫–∞–∑—ã –≤ –±–∞–∑–µ:")
        all_orders = db.query(Order.id, Order.created_at, Order.status, Order.price).order_by(Order.created_at.desc()).limit(20).all()
        
        for order in all_orders:
            price_str = f"{order.price}‚ÇΩ" if order.price else "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"
            print(f"   ID {order.id}: {order.created_at} | {order.status.value} | {price_str}")
        
        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        current_time = datetime.now()
        print(f"\nüïí –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {current_time}")
        print(f"   –î–∞—Ç–∞: {current_time.date()}")
        print(f"   –í—Ä–µ–º—è: {current_time.time()}")
        
        # 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–Ω–∞–º–∏–∫–∏
        print(f"\nüîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ get_orders_timeline:")
        days = 60
        end_date = datetime.now().date()
        start_date = end_date - timedelta(days=days)
        
        print(f"   –ü–µ—Ä–∏–æ–¥: {start_date} - {end_date}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π: {days}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã –≤ —ç—Ç–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ
        orders_in_range = db.query(Order).filter(
            func.date(Order.created_at) >= start_date
        ).count()
        
        print(f"   –ó–∞–∫–∞–∑–æ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ: {orders_in_range}")
        
        if orders_in_range == 0:
            print("   ‚ùå –í—Å–µ –∑–∞–∫–∞–∑—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –í–ù–ï –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞!")
            print("   üí° –≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç, –ø–æ—á–µ–º—É –≥—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω—É–ª–∏")
        
    finally:
        db.close()

if __name__ == "__main__":
    check_database_data()
