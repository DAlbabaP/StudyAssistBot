#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ SellerBot
"""
import asyncio
import os
import sys
import subprocess
from pathlib import Path

def print_step(step_num: int, description: str):
    """–ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ —à–∞–≥–æ–≤"""
    print(f"\n{'='*60}")
    print(f"–®–ê–ì {step_num}: {description}")
    print(f"{'='*60}")

def run_command(command: str, description: str = ""):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"""
    if description:
        print(f"  ‚Üí {description}")
    print(f"  $ {command}")
    
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    
    if result.returncode != 0:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {result.stderr}")
        return False
    
    if result.stdout:
        print(f"  ‚úÖ {result.stdout.strip()}")
    
    return True

def check_requirements():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π"""
    print_step(1, "–ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –¢–†–ï–ë–û–í–ê–ù–ò–ô")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    python_version = sys.version_info
    if python_version.major != 3 or python_version.minor < 8:
        print("  ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ")
        return False
    print(f"  ‚úÖ Python {python_version.major}.{python_version.minor}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
    if not run_command("pip --version", "–ü—Ä–æ–≤–µ—Ä–∫–∞ pip"):
        return False
    
    return True

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print_step(2, "–£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô")
    
    if not run_command("pip install -r requirements.txt", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤"):
        return False
    
    return True

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print_step(3, "–ù–ê–°–¢–†–û–ô–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    if not os.path.exists(".env"):
        print("  ‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        if os.path.exists(".env.example"):
            print("  ‚Üí –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env.example –≤ .env")
            import shutil
            shutil.copy(".env.example", ".env")
            print("  ‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω")
            print("  üìù –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!")
        else:
            print("  ‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    else:
        print("  ‚úÖ –§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    directories = [
        "uploads/files",
        "logs"
    ]
    
    for directory in directories:
        os.makedirs(directory, exist_ok=True)
        print(f"  ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {directory} —Å–æ–∑–¥–∞–Ω–∞")
    
    return True

def setup_database():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print_step(4, "–ù–ê–°–¢–†–û–ô–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    
    print("  üìã –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤–∞–º –Ω—É–∂–Ω–æ:")
    print("     1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PostgreSQL")
    print("     2. –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö 'seller_bot'")
    print("     3. –û–±–Ω–æ–≤–∏—Ç—å DATABASE_URL –≤ .env —Ñ–∞–π–ª–µ")
    
    # –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
    print("  ‚Üí –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π...")
    if run_command("alembic upgrade head", "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π"):
        print("  ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    else:
        print("  ‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤—Ä—É—á–Ω—É—é.")
    
    return True

def setup_telegram_bot():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –±–æ—Ç–∞"""
    print_step(5, "–ù–ê–°–¢–†–û–ô–ö–ê TELEGRAM –ë–û–¢–ê")
    
    print("  üìã –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞:")
    print("     1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather")
    print("     2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
    print("     3. –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ")
    print("     4. –ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à Telegram ID —á–µ—Ä–µ–∑ @userinfobot")
    print("     5. –î–æ–±–∞–≤—å—Ç–µ ID –≤ ADMIN_USER_ID –≤ .env —Ñ–∞–π–ª–µ")
    
    return True

def final_instructions():
    """–§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    print_step(6, "–ó–ê–í–ï–†–®–ï–ù–ò–ï –£–°–¢–ê–ù–û–í–ö–ò")
    
    print("  üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print()
    print("  üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
    print("     1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
    print("     2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –∑–∞–ø—É—â–µ–Ω")
    print("     3. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏: alembic upgrade head")
    print("     4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main_bot.py")
    print("     5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: python main_admin.py")
    print()
    print("  üåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000")
    print()
    print("  üìö –ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ README.md")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("""
    ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
    ‚ïë                                                              ‚ïë
    ‚ïë                ü§ñ –£–°–¢–ê–ù–û–í–ö–ê SELLERBOT ü§ñ                     ‚ïë
    ‚ïë                                                              ‚ïë
    ‚ïë    Telegram –±–æ—Ç –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é  ‚ïë
    ‚ïë                                                              ‚ïë
    ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    """)
    
    try:
        if not check_requirements():
            sys.exit(1)
        
        if not install_dependencies():
            sys.exit(1)
        
        if not setup_environment():
            sys.exit(1)
        
        if not setup_database():
            # –ù–µ –≤—ã—Ö–æ–¥–∏–º, —Ç–∞–∫ –∫–∞–∫ –ë–î –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø–æ–∑–∂–µ
            pass
        
        if not setup_telegram_bot():
            # –ù–µ –≤—ã—Ö–æ–¥–∏–º, —Ç–∞–∫ –∫–∞–∫ –±–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø–æ–∑–∂–µ
            pass
        
        final_instructions()
        
    except KeyboardInterrupt:
        print("\n\n  ‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n\n  ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
