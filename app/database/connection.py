from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker, Session
from app.config import settings

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–≤–∏–∂–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è SQLite (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π)
# üî• –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—Ç–∫–ª—é—á–µ–Ω—ã SQL –ª–æ–≥–∏ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã –∫–æ–Ω—Å–æ–ª–∏
database_url = settings.database_url

engine = create_engine(
    database_url,
    echo=False,  # üî• –ò–ó–ú–ï–ù–ï–ù–û: –±—ã–ª–æ echo=settings.debug, —Ç–µ–ø–µ—Ä—å False
    # –î–ª—è SQLite –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É foreign keys
    connect_args={"check_same_thread": False} if "sqlite" in database_url else {}
)

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)


def get_db():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()


async def get_db_async():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db = SessionLocal()
    return db


def get_db_session():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    return SessionLocal()


def create_tables():
    """–°–æ–∑–¥–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    from app.database.models import Base
    Base.metadata.create_all(bind=engine)