from enum import Enum
from sqlalchemy.ext.declarative import declarative_base

# –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
Base = declarative_base()

# –ò–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –∞–ª–µ–º–±–∏–∫–∞
from .user import User
from .order import Order
from .file import OrderFile
from .status_history import StatusHistory


class OrderStatus(str, Enum):
    NEW = "new"                    # üÜï –ù–æ–≤—ã–π
    IN_PROGRESS = "in_progress"    # ‚è≥ –í —Ä–∞–±–æ—Ç–µ  
    READY = "ready"               # ‚úÖ –ì–æ—Ç–æ–≤
    WAITING_PAYMENT = "waiting_payment"  # üí∞ –ñ–¥–µ—Ç –æ–ø–ª–∞—Ç—ã
    SENT = "sent"                 # üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω
    CANCELLED = "cancelled"       # ‚ùå –û—Ç–º–µ–Ω–µ–Ω


def get_status_emoji(status: OrderStatus) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —ç–º–æ–¥–∑–∏ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞"""
    emoji_map = {
        OrderStatus.NEW: "üÜï",
        OrderStatus.IN_PROGRESS: "‚è≥",
        OrderStatus.READY: "‚úÖ",
        OrderStatus.WAITING_PAYMENT: "üí∞",
        OrderStatus.SENT: "üì§",
        OrderStatus.CANCELLED: "‚ùå"
    }
    return emoji_map.get(status, "‚ùì")


def get_status_text(status: OrderStatus) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"""
    text_map = {
        OrderStatus.NEW: "–ù–æ–≤—ã–π",
        OrderStatus.IN_PROGRESS: "–í —Ä–∞–±–æ—Ç–µ",
        OrderStatus.READY: "–ì–æ—Ç–æ–≤",
        OrderStatus.WAITING_PAYMENT: "–ñ–¥–µ—Ç –æ–ø–ª–∞—Ç—ã",
        OrderStatus.SENT: "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω",
        OrderStatus.CANCELLED: "–û—Ç–º–µ–Ω–µ–Ω"
    }
    return text_map.get(status, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")
