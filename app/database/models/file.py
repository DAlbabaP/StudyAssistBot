from sqlalchemy import Column, Integer, String, DateTime, ForeignKey, Boolean
from sqlalchemy.orm import relationship
from datetime import datetime
from . import Base


class OrderFile(Base):
    """–ú–æ–¥–µ–ª—å —Ñ–∞–π–ª–∞, –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ –∫ –∑–∞–∫–∞–∑—É"""
    __tablename__ = "order_files"
    
    id = Column(Integer, primary_key=True, index=True)
    order_id = Column(Integer, ForeignKey("orders.id"), nullable=False)
    filename = Column(String(255), nullable=False)
    file_path = Column(String(500), nullable=False)
    file_size = Column(Integer, nullable=True)
    file_type = Column(String(50), nullable=True)
    uploaded_at = Column(DateTime, default=datetime.utcnow)
    
    # üÜï –ù–û–í–´–ï –ü–û–õ–Ø –¥–ª—è —Ñ–∞–π–ª–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∞
    uploaded_by_admin = Column(Boolean, default=False, nullable=False)  # –ó–∞–≥—Ä—É–∂–µ–Ω –∞–¥–º–∏–Ω–æ–º
    sent_to_user = Column(Boolean, default=False, nullable=False)       # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    sent_at = Column(DateTime, nullable=True)                           # –ö–æ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
    
    # Relationships
    order = relationship("Order", back_populates="files")
    
    def __repr__(self):
        return f"<OrderFile(id={self.id}, filename='{self.filename}', order_id={self.order_id}, by_admin={self.uploaded_by_admin})>"
    
    @property
    def size_mb(self):
        """–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö"""
        if self.file_size:
            return round(self.file_size / (1024 * 1024), 2)
        return 0
    
    @property
    def file_extension(self):
        """–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞"""
        return self.filename.split('.')[-1].lower() if '.' in self.filename else ''
    
    @property
    def source_label(self):
        """–ò—Å—Ç–æ—á–Ω–∏–∫ —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        return "–ê–¥–º–∏–Ω" if self.uploaded_by_admin else "–ö–ª–∏–µ–Ω—Ç"