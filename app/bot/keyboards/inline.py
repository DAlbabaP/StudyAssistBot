from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.database.models import OrderStatus, get_status_emoji, get_status_text
from typing import List


def get_order_details_keyboard(order_id: int, is_admin: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()
    
    if is_admin:
        builder.add(InlineKeyboardButton(
            text="üí∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É", 
            callback_data=f"set_price:{order_id}"
        ))
        builder.add(InlineKeyboardButton(
            text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", 
            callback_data=f"change_status:{order_id}"
        ))
        builder.add(InlineKeyboardButton(
            text="üìé –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª", 
            callback_data=f"send_file:{order_id}"
        ))
        builder.adjust(1)
    
    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É", 
        callback_data="back_to_orders"
    ))
    
    return builder.as_markup()


def get_orders_pagination_keyboard(page: int, total_pages: int, user_id: int = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤"""
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if page > 1:
        nav_buttons.append(InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
            callback_data=f"orders_page:{page-1}:{user_id or 'all'}"
        ))
    
    nav_buttons.append(InlineKeyboardButton(
        text=f"{page}/{total_pages}",
        callback_data="current_page"
    ))
    
    if page < total_pages:
        nav_buttons.append(InlineKeyboardButton(
            text="–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è", 
            callback_data=f"orders_page:{page+1}:{user_id or 'all'}"
        ))
    
    if nav_buttons:
        builder.row(*nav_buttons)
    
    return builder.as_markup()


def get_status_change_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()
    
    statuses = [
        (OrderStatus.NEW, "üÜï –ù–æ–≤—ã–π"),
        (OrderStatus.IN_PROGRESS, "‚è≥ –í —Ä–∞–±–æ—Ç–µ"),
        (OrderStatus.READY, "‚úÖ –ì–æ—Ç–æ–≤"),
        (OrderStatus.WAITING_PAYMENT, "üí∞ –ñ–¥–µ—Ç –æ–ø–ª–∞—Ç—ã"),
        (OrderStatus.SENT, "üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω"),
        (OrderStatus.CANCELLED, "‚ùå –û—Ç–º–µ–Ω–µ–Ω")
    ]
    
    for status, text in statuses:
        builder.add(InlineKeyboardButton(
            text=text,
            callback_data=f"status:{order_id}:{status.value}"
        ))
    
    builder.add(InlineKeyboardButton(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data=f"order_details:{order_id}"
    ))
    
    builder.adjust(2)
    return builder.as_markup()


def get_admin_main_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(text="üìã –í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_orders:all"))
    builder.add(InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_orders:new"))
    builder.add(InlineKeyboardButton(text="‚è≥ –í —Ä–∞–±–æ—Ç–µ", callback_data="admin_orders:in_progress"))
    builder.add(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤—ã–µ", callback_data="admin_orders:ready"))
    builder.add(InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats"))
    builder.add(InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast"))
    
    builder.adjust(2)
    return builder.as_markup()


def get_order_action_keyboard(order_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∑–∞–∫–∞–∑–æ–º –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
    builder = InlineKeyboardBuilder()
    
    builder.add(InlineKeyboardButton(
        text="üëÅÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ",
        callback_data=f"order_details:{order_id}"
    ))
    
    return builder.as_markup()
