# –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ñ–∞–π–ª: app/bot/handlers/user_messages.py

from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from app.services.user_service import UserService
from app.services.order_service import OrderService
from app.services.communication_service import CommunicationService
from app.services.payment_service import PaymentService
from app.database.connection import get_db_async
from app.database.models.enums import OrderStatus
from app.bot.keyboards.client import get_main_menu
from app.config import settings

router = Router()


@router.message(F.text & ~F.text.startswith('/') & ~F.text.in_([
    "üìù –ù–æ–≤—ã–π –∑–∞–∫–∞–∑", "üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", "‚ÑπÔ∏è –û –Ω–∞—Å", "‚òéÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
    "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É", 
    "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", "‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "üîô –ù–∞–∑–∞–¥"
]))
async def handle_user_message(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ—Ç –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É –∑–∞–∫–∞–∑—É
    """
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    current_state = await state.get_state()
    if current_state:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –¥–∏–∞–ª–æ–≥
        return
    
    db = await get_db_async()
    try:
        user_service = UserService(db)
        order_service = OrderService(db)
        communication_service = CommunicationService(db)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = user_service.get_user_by_telegram_id(message.from_user.id)
        if not user:
            await message.answer(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                reply_markup=get_main_menu()
            )
            return
        
        # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –∏ –Ω–µ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π)
        active_statuses = [
            OrderStatus.NEW, 
            OrderStatus.IN_PROGRESS, 
            OrderStatus.READY, 
            OrderStatus.WAITING_PAYMENT
        ]
        
        active_order = None
        user_orders = order_service.get_user_orders(user.id, page=1, per_page=10)
        
        for order in user_orders['orders']:
            if order.status in active_statuses:
                active_order = order
                break
        
        if not active_order:
            # –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await message.answer(
                "üí¨ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!\n\n"
                "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ–±—â–µ–Ω–∏—è. "
                "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=get_main_menu()
            )
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        user_message_saved = await communication_service.save_user_message(
            order_id=active_order.id,
            message_text=message.text,
            telegram_message_id=message.message_id
        )
        
        if user_message_saved:
            print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id} —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{active_order.id}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.answer(
                f"‚úÖ <b>–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!</b>\n\n"
                f"üìã <b>–ó–∞–∫–∞–∑ #{active_order.id}</b>\n"
                f"üìù {active_order.work_type}: {active_order.short_topic}\n\n"
                f"üí¨ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. "
                f"–û—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –≤ —ç—Ç–æ—Ç —á–∞—Ç.",
                parse_mode="HTML"
            )
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
            await notify_admin_about_user_message(active_order, user, message.text)
        
        else:
            await message.answer(
                "‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
                reply_markup=get_main_menu()
            )
    
    finally:
        db.close()


async def notify_admin_about_user_message(order, user, message_text: str):
    """–£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        from aiogram import Bot
        
        bot = Bot(token=settings.bot_token)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
        admin_text = f"üí¨ <b>–ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –û–¢ –ö–õ–ò–ï–ù–¢–ê</b>\n\n"
        admin_text += f"üìã <b>–ó–∞–∫–∞–∑ #{order.id}</b>\n"
        admin_text += f"üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> {user.full_name}"
        if user.username:
            admin_text += f" (@{user.username})"
        admin_text += f"\nüì± <b>Telegram ID:</b> {user.telegram_id}\n\n"
        
        admin_text += f"üìù <b>–¢–∏–ø —Ä–∞–±–æ—Ç—ã:</b> {order.work_type}\n"
        admin_text += f"üìã <b>–¢–µ–º–∞:</b> {order.short_topic}\n\n"
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        preview = message_text[:200] + "..." if len(message_text) > 200 else message_text
        admin_text += f"üí≠ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n<i>'{preview}'</i>\n"        
        admin_text += f"üîó <b>–û—Ç–≤–µ—Ç–∏—Ç—å:</b> http://127.0.0.1:8000/orders/{order.id}\n"
        admin_text += f"üí° <b>–û—Ç–∫—Ä–æ–π—Ç–µ –∑–∞–∫–∞–∑ –∏ –Ω–∞–∂–º–∏—Ç–µ '–û–±—â–µ–Ω–∏–µ' –¥–ª—è –æ—Ç–≤–µ—Ç–∞</b>"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        await bot.send_message(
            chat_id=settings.admin_user_id,
            text=admin_text,
            parse_mode="HTML"
        )
        
        print(f"‚úÖ –ê–¥–º–∏–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ—Ç {user.telegram_id} –ø–æ –∑–∞–∫–∞–∑—É #{order.id}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.session.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")


@router.message(F.text == "üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
async def write_to_admin_button(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É'"""
    
    db = await get_db_async()
    try:
        user_service = UserService(db)
        order_service = OrderService(db)
        
        user = user_service.get_user_by_telegram_id(message.from_user.id)
        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–∂–º–∏—Ç–µ /start")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã
        user_orders = order_service.get_user_orders(user.id, page=1, per_page=5)
        
        active_orders = []
        for order in user_orders['orders']:
            if order.status in [OrderStatus.NEW, OrderStatus.IN_PROGRESS, OrderStatus.READY, OrderStatus.WAITING_PAYMENT]:
                active_orders.append(order)
        
        if not active_orders:
            await message.answer(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ–±—â–µ–Ω–∏—è.\n\n"
                "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
                reply_markup=get_main_menu()
            )
            return
        
        if len(active_orders) == 1:
            order = active_orders[0]
            text = f"üí¨ <b>–û–±—â–µ–Ω–∏–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>\n\n"
            text += f"üìã <b>–ó–∞–∫–∞–∑ #{order.id}</b>\n"
            text += f"üìù {order.work_type}: {order.short_topic}\n\n"
            text += f"‚úçÔ∏è –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –µ–≥–æ –ø–æ–ª—É—á–∏—Ç!"
        else:
            text = f"üí¨ <b>–û–±—â–µ–Ω–∏–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</b>\n\n"
            text += f"–£ –≤–∞—Å –µ—Å—Ç—å {len(active_orders)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:\n\n"
            for order in active_orders[:3]:
                text += f"üìã #{order.id} - {order.work_type}\n"
            text += f"\n‚úçÔ∏è –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –∞–∫—Ç–∏–≤–Ω–æ–º—É –∑–∞–∫–∞–∑—É #{active_orders[0].id}"
        
        await message.answer(text, parse_mode="HTML")
    
    finally:
        db.close()


# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –§–ê–ô–õ–û–í ===

@router.message(F.photo)
async def handle_user_photo(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –û—Å–æ–±–µ–Ω–Ω–æ –≤–∞–∂–Ω–æ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –æ–ø–ª–∞—Ç—ã
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    current_state = await state.get_state()
    if current_state:
        return
    
    db = await get_db_async()
    try:
        user_service = UserService(db)
        order_service = OrderService(db)
        communication_service = CommunicationService(db)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = user_service.get_user_by_telegram_id(message.from_user.id)
        if not user:
            await message.answer(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                reply_markup=get_main_menu()
            )
            return
          # –ò—â–µ–º –∑–∞–∫–∞–∑ –≤ —Å—Ç–∞—Ç—É—Å–µ "–æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã"
        payment_orders = order_service.get_user_orders_by_status(
            user.id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î, –∞ –Ω–µ telegram_id
            OrderStatus.WAITING_PAYMENT
        )
        
        if payment_orders:
            # –ï—Å—Ç—å –∑–∞–∫–∞–∑, –æ–∂–∏–¥–∞—é—â–∏–π –æ–ø–ª–∞—Ç—ã - —ç—Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã
            order = payment_orders[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π
              # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ
            from app.bot.utils.file_handler import save_photo
            from aiogram import Bot
            
            bot = Bot(token=settings.bot_token)
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
                photo = message.photo[-1]
                
                file_path, original_filename = await save_photo(photo, order.id, bot)
                  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –∫–∞–∫ —Ñ–∞–π–ª –∑–∞–∫–∞–∑–∞
                file_record = order_service.add_file_to_order(
                    order.id,
                    original_filename or f"screenshot_{photo.file_id}.jpg",
                    file_path,
                    photo.file_size
                )
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã
                from app.services.payment_service import PaymentService
                payment_service = PaymentService(db)
                
                caption = message.caption if message.caption else "–°–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã"
                payment_service.process_payment_screenshot(
                    order.id, 
                    file_record.id, 
                    caption
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await message.answer(
                    f"‚úÖ <b>–°–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω!</b>\n\n"
                    f"üìã <b>–ó–∞–∫–∞–∑ #{order.id}</b>\n"
                    f"üìù <b>–¢–µ–º–∞:</b> {order.short_topic}\n\n"
                    f"‚è≥ –í–∞—à –ø–ª–∞—Ç–µ–∂ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 —á–∞—Å–æ–≤.\n"
                    f"–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º –≥–æ—Ç–æ–≤—É—é —Ä–∞–±–æ—Ç—É.",
                    parse_mode="HTML",
                    reply_markup=get_main_menu()
                )
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞ –æ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ –æ–ø–ª–∞—Ç—ã
                await notify_admin_about_payment_screenshot(order, user, caption)
                
            finally:
                await bot.session.close()
        
        else:            # –ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ñ–∞–π–ª
            active_orders = order_service.get_user_orders_by_status(
                user.id,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î, –∞ –Ω–µ telegram_id
                [OrderStatus.NEW, OrderStatus.IN_PROGRESS, OrderStatus.REVISION]
            )
            
            if active_orders:
                order = active_orders[0]                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ñ–∞–π–ª
                from app.bot.utils.file_handler import save_photo
                from aiogram import Bot
                
                bot = Bot(token=settings.bot_token)
                
                try:
                    photo = message.photo[-1]
                    file_path, original_filename = await save_photo(photo, order.id, bot)
                    
                    file_record = order_service.add_file_to_order(
                        order.id,
                        original_filename or f"photo_{photo.file_id}.jpg",
                        file_path,
                        photo.file_size
                    )
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    caption = message.caption if message.caption else "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è"
                    await communication_service.save_user_message(
                        order.id, 
                        f"üì∏ –û—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é: {caption}",
                        message.message_id
                    )
                    
                    await message.answer(
                        f"‚úÖ <b>–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–ª—É—á–µ–Ω–∞!</b>\n\n"
                        f"üìã <b>–ó–∞–∫–∞–∑ #{order.id}</b>\n"
                        f"üìù <b>–¢–µ–º–∞:</b> {order.short_topic}\n\n"
                        f"üìÑ <b>–§–∞–π–ª:</b> {file_record.filename}",
                        parse_mode="HTML",
                        reply_markup=get_main_menu()
                    )
                    
                    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
                    await notify_admin_about_user_file(order, user, file_record)
                    
                finally:
                    await bot.session.close()
            
            else:
                await message.answer(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n\n"
                    "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã.",
                    reply_markup=get_main_menu()
                )
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_main_menu()
        )
    finally:
        db.close()


@router.message(F.document)
async def handle_user_document(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
    current_state = await state.get_state()
    if current_state:
        return
    
    db = await get_db_async()
    try:
        user_service = UserService(db)
        order_service = OrderService(db)
        communication_service = CommunicationService(db)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = user_service.get_user_by_telegram_id(message.from_user.id)
        if not user:
            await message.answer(
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
                reply_markup=get_main_menu()
            )
            return
        
        # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑
        active_orders = order_service.get_user_orders_by_status(
            user.id,
            [OrderStatus.NEW, OrderStatus.IN_PROGRESS, OrderStatus.REVISION, OrderStatus.WAITING_PAYMENT]
        )
        
        if active_orders:
            order = active_orders[0]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            from app.bot.utils.file_handler import save_file
            from aiogram import Bot
            
            bot = Bot(token=settings.bot_token)
            
            try:
                document = message.document
                file_path, original_filename = await save_file(document, order.id, bot)
                
                file_record = order_service.add_file_to_order(
                    order.id,
                    original_filename or document.file_name,
                    file_path,
                    document.file_size
                )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                caption = message.caption if message.caption else f"–î–æ–∫—É–º–µ–Ω—Ç: {document.file_name}"
                await communication_service.save_user_message(
                    order.id, 
                    f"üìé –û—Ç–ø—Ä–∞–≤–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç: {caption}",
                    message.message_id
                )
                
                await message.answer(
                    f"‚úÖ <b>–î–æ–∫—É–º–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω!</b>\n\n"
                    f"üìã <b>–ó–∞–∫–∞–∑ #{order.id}</b>\n"
                    f"üìù <b>–¢–µ–º–∞:</b> {order.short_topic}\n\n"
                    f"üìÑ <b>–§–∞–π–ª:</b> {file_record.filename}",
                    parse_mode="HTML",
                    reply_markup=get_main_menu()
                )
                
                # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
                await notify_admin_about_user_file(order, user, file_record)
                
            finally:
                await bot.session.close()
        
        else:
            await message.answer(
                "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.\n\n"
                "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª—ã.",
                reply_markup=get_main_menu()
            )
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {e}")
        await message.answer(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=get_main_menu()
        )
    finally:
        db.close()


async def notify_admin_about_payment_screenshot(order, user, message_text: str):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –æ–ø–ª–∞—Ç—ã
    """
    try:
        from aiogram import Bot
        
        bot = Bot(token=settings.bot_token)
        
        admin_text = f"üí∞ <b>–ü–û–õ–£–ß–ï–ù –°–ö–†–ò–ù–®–û–¢ –û–ü–õ–ê–¢–´!</b>\n\n"
        admin_text += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user.full_name}\n"
        admin_text += f"üì± <b>Telegram:</b> @{user.username or '–±–µ–∑ username'}\n\n"
        admin_text += f"üìã <b>–ó–∞–∫–∞–∑ #{order.id}</b>\n"
        admin_text += f"üìù <b>{order.work_type}:</b> {order.short_topic}\n"
        admin_text += f"üíµ <b>–°—É–º–º–∞:</b> {order.price:,.2f} ‚ÇΩ\n\n"
        if message_text and message_text != "–°–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã":
            admin_text += f"üí≠ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b> {message_text}\n\n"
        admin_text += f"üîó <b>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂:</b> http://127.0.0.1:8000/orders/{order.id}"
        
        await bot.send_message(
            chat_id=settings.admin_user_id,
            text=admin_text,
            parse_mode="HTML"
        )
        
        await bot.session.close()
        print(f"‚úÖ –ê–¥–º–∏–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω –æ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ –æ–ø–ª–∞—Ç—ã –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order.id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –æ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ: {e}")


async def notify_admin_about_user_file(order, user, file_record):
    """–£–≤–µ–¥–æ–º–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        from aiogram import Bot
        
        bot = Bot(token=settings.bot_token)
        
        admin_text = f"üìé <b>–ù–û–í–´–ô –§–ê–ô–õ –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø</b>\n\n"
        admin_text += f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user.full_name}\n"
        admin_text += f"üì± <b>Telegram:</b> @{user.username or '–±–µ–∑ username'}\n\n"
        admin_text += f"üìã <b>–ó–∞–∫–∞–∑ #{order.id}</b>\n"
        admin_text += f"üìù <b>{order.work_type}:</b> {order.short_topic}\n\n"
        admin_text += f"üìÑ <b>–§–∞–π–ª:</b> {file_record.filename}\n"
        if file_record.file_size:
            admin_text += f"üìä <b>–†–∞–∑–º–µ—Ä:</b> {file_record.size_mb} –ú–ë\n"
        admin_text += f"üîó <b>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å:</b> http://127.0.0.1:8000/orders/{order.id}"
        
        await bot.send_message(
            chat_id=settings.admin_user_id,
            text=admin_text,
            parse_mode="HTML"
        )
        
        await bot.session.close()
        print(f"‚úÖ –ê–¥–º–∏–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω –æ –Ω–æ–≤–æ–º —Ñ–∞–π–ª–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ #{order.id}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ –æ —Ñ–∞–π–ª–µ: {e}")